name: CI-CD-Pipeline CI CD

on:
  push:
    branches: [ main ]

  workflow_dispatch:

env:
  # Postgres-Environment-Variables
  POSTGRESQL_VERSION: 13.1
  POSTGRESQL_DB: ${{ secrets.JDBC_DATABASE_URL}}
  POSTGRESQL_USER: ${{ secrets.JDBC_DATABASE_USERNAME}}
  POSTGRESQL_PASSWORD: ${{ secrets.JDBC_DATABASE_PASSWORD}}
  # Java -Environment-Variables
  JAVA_VERSION: 1.8
  # DockerHub-Environment-Variables
  DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
  DOCKER_HUB_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}
  # Heroku-Environment-Variables
  HEROKU_API_KEY:  ${{ secrets.HEROKU_API_KEY }}
  HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME }}
  HEROKU_EMAIL:  ${{ secrets.HEROKU_EMAIL }}
  # Push-Packages
  PUSH_PACKAGES: ${{ github.ref == 'refs/heads/main' }} && ${{ job.status == 'success' }}

jobs:
  # Create Postgres-image
  deploy:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13.1
        env:
          POSTGRES_DB: ${{ env.POSTGRESQL_DB }}
          POSTGRES_USER: ${{ env.POSTGRESQL_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRESQL_PASSWORD }}
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
    # Slack Notification
      - uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
          text: 'CICD ongoing... :eyes:'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      - uses: actions/checkout@v2
      - name: Setup Java JDK
        uses: actions/setup-java@v1.4.3
        with:
          java-version: ${{ env.JAVA_VERSION }}
      - name: Build Number
        id: build-number
        run: echo "::set-output name=BUILD_NUMBER::$(date '+%-d.%-m.%Y.%-H.%-M.%-S')"
        # Login, Package and Push to DockerHub and Slack Notification
      - name: Docker Login
        uses: docker/login-action@f3364599c6aa293cdc2b8391b1b56d0c30e45c8a
        with:
          username: ${{ env.DOCKER_HUB_USERNAME }}
          password: ${{ env.DOCKER_HUB_PASSWORD }}

      - name: Maven Clean Package and Push to Dockerhub
        run: |
          ./mvnw --no-transfer-progress clean package \
            -P build-frontend \
            -P jib-push-to-dockerhub \
              -Dapp.image.tag=${{steps.build-number.outputs.BUILD_NUMBER}}
      - uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
          text: ':white_check_mark: pushed nbrownie/jumbleapplication:${{steps.build-number.outputs.BUILD_NUMBER}} to docker hub... https://hub.docker.com/repository/docker/nbrownie/jumbleapp'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      # Update docker-compose-file and Slack-Notification
      - name: Update and commit app version in docker-compose.yaml
        run: |
          BUILD_NUMBER=${{steps.build-number.outputs.BUILD_NUMBER}}
          echo -e "Current docker/docker-compose.yml\n$(cat docker/docker-compose.yml)"
          sed -i -E 's_(nbrownie/jumbleapplication:)([^"]*)_\1'${BUILD_NUMBER}'_' docker/docker-compose.yml
          echo -e "Current docker/docker-compose.yml\n$(cat docker/docker-compose.yml)"
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add docker/docker-compose.yml
          git commit -m "new app version: ${BUILD_NUMBER}"
          git push
      - uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
          text: ':heroku: Deployment started... :grimacing: :crossed_fingers:'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        # deploy remote heroku and Slack Notification https://github.com/marketplace/actions/deploy-to-heroku
      - name: Add remote origin
         if: ${{ env.PUSH_PACKAGES }}
         run: |
           git remote add heroku https://heroku:${{ secrets.HEROKU_API_KEY }}@git.heroku.com/${{ secrets.HEROKU_APP_NAME}}
      - name: Deploy to Heroku
         run: |
           git push heroku HEAD:main -f
      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.12.12
              with:
                heroku_api_key:  ${{ env.HEROKU_API_KEY }}
                heroku_app_name: ${{ env.HEROKU_APP_NAME }}
                heroku_email: ${{ env.HEROKU_EMAIL }}
                usedocker: true
      - uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
          text: ':tada: :arrow_right: https://jumbles.herokuapp.com/'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always()